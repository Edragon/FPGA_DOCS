--lpm_mult CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEDICATED_MULTIPLIER_CIRCUITRY="YES" DEVICE_FAMILY="Cyclone II" DSP_BLOCK_BALANCING="Auto" INPUT_B_IS_CONSTANT="NO" LPM_PIPELINE=3 LPM_REPRESENTATION="SIGNED" LPM_WIDTHA=16 LPM_WIDTHB=16 LPM_WIDTHP=32 LPM_WIDTHS=1 MAXIMIZE_SPEED=6 clock dataa datab result CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 8.1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:05:19:10:49:01:SJ cbx_lpm_mult 2008:08:08:14:38:02:SJ cbx_mgl 2008:08:08:15:16:18:SJ cbx_padd 2008:07:31:17:08:03:SJ cbx_stratix 2008:08:05:17:10:23:SJ cbx_stratixii 2008:08:07:13:54:47:SJ cbx_util_mgl 2008:07:18:09:58:54:SJ  VERSION_END


-- Copyright (C) 1991-2008 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION cycloneii_mac_mult (aclr, clk, dataa[dataa_width-1..0], datab[datab_width-1..0], ena, signa, signb)
WITH ( dataa_clock, dataa_width, datab_clock, datab_width, signa_clock, signb_clock)
RETURNS ( dataout[dataa_width+datab_width-1..0]);
FUNCTION cycloneii_mac_out (aclr, clk, dataa[dataa_width-1..0], ena)
WITH ( dataa_width = 0, output_clock)
RETURNS ( dataout[dataa_width-1..0]);

--synthesis_resources = dsp_9bit 2 reg 32 
SUBDESIGN mult_6701
( 
	clock	:	input;
	dataa[15..0]	:	input;
	datab[15..0]	:	input;
	result[31..0]	:	output;
) 
VARIABLE 
	mac_mult1 : cycloneii_mac_mult
		WITH (
			dataa_clock = "0",
			dataa_width = 16,
			datab_clock = "0",
			datab_width = 16,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_out2 : cycloneii_mac_out
		WITH (
			dataa_width = 32,
			output_clock = "0"
		);
	dffe3a[31..0] : dffe;
	aclr	: NODE;
	clken	: NODE;

BEGIN 
	mac_mult1.aclr = aclr;
	mac_mult1.clk = clock;
	mac_mult1.dataa[] = ( dataa[]);
	mac_mult1.datab[] = ( datab[]);
	mac_mult1.ena = clken;
	mac_mult1.signa = B"1";
	mac_mult1.signb = B"1";
	mac_out2.aclr = aclr;
	mac_out2.clk = clock;
	mac_out2.dataa[] = mac_mult1.dataout[];
	mac_out2.ena = clken;
	dffe3a[].clk = clock;
	dffe3a[].clrn = (! aclr);
	dffe3a[].d = mac_out2.dataout[31..0];
	dffe3a[].ena = clken;
	aclr = GND;
	clken = VCC;
	result[] = dffe3a[].q;
END;
--VALID FILE
